db.restaurantData.find().pretty()
db.restaurantData.find({}, { restaurant_id : 1, name: 1, borough: 1, cuisine: 1}).pretty()
db.restaurantData.find({}, { restaurant_id : 1, name: 1, borough: 1, cuisine: 1, _id: 0 }).pretty()
db.restaurantData.find({}, { restaurant_id : 1, name: 1, borough: 1, address: { zipcode : 1}, _id : 0 }).pretty()
db.restaurantData.find({borough : "Bronx"}).pretty()
db.restaurantData.find({borough : "Bronx"}, {name : 1}).limit(5).pretty()
db.restaurantData.find({borough : "Bronx"}, {name : 1}).skip(5).limit(5).pretty()
db.restaurantData.find( {"grades.score": {$gt: 90} }).pretty()
db.restaurantData.find({ "grades.score": {$lt: 100, $gt: 80}}, {"grades.score": 1}).pretty()
db.restaurantData.find({"address.coord": {$lt: -95.754168}}, {address: 1, _id: 0}).pretty()
db.restaurantData.find( { $and: [ {cuisine: {$ne: "American " }} , {"grades.score": {$gt: 70}} , {"address.coord": {$lt: -65.754168}} ]} ).pretty()
db.restaurantData.find( { cuisine: {$ne: "American " } , "grades.score": {$gt: 70} , "address.coord": {$lt: -65.754168} } ).pretty()
db.restaurantData.find( { $and: [{cuisine: {$ne: "American " }}, { "grades.grade" : "A"}, { borough: {$ne: "Brooklyn"} } ]} ).sort( { cuisine : -1} ).pretty()
db.restaurantData.find({ name : { $regex: /^Wil/ } }, { restaurant_id : 1 , name : 1, borough : 1, cuisine : 1, _id: 0}).pretty()
db.restaurantData.find({ name : { $regex: /ces$/ } }, { restaurant_id : 1 , name : 1, borough : 1, cuisine : 1, _id: 0}).pretty()
db.restaurantData.find({ name : { $regex: /Reg/ } }, { restaurant_id : 1 , name : 1, borough : 1, cuisine : 1, _id: 0}).pretty()
db.restaurantData.find( { $and: [ {borough : "Bronx"}, { cuisine: { $in: [ "American ", "Chinese" ] }}]} ).pretty()
db.restaurantData.find( { borough: { $in: ["Staten Island", "Queens", "Bronx", "Brooklyn"]}}, { restaurant_id : 1 , name : 1, borough : 1, cuisine : 1, _id: 0}).pretty()
db.restaurantData.find( { borough: { $nin: ["Staten Island", "Queens", "Bronx", "Brooklyn"]}}, { restaurant_id : 1 , name : 1, borough : 1, cuisine : 1, _id: 0}).pretty()
db.restaurantData.find( {"grades.score": { $lt: 10}}, { restaurant_id : 1 , name : 1, borough : 1, cuisine : 1, _id: 0}).pretty()
db.restaurantData.find( { cuisine: "Seafood" }, { cuisine: {$ne: "American "} }, { cuisine: {$ne: "Chinese"} },{ name : {$ne: { $regex: /^Wil/ } }} , {"name" : 1, "borough" : 1, "cuisine" : 1, } ).count()
db.restaurantData.find({  grades : { "date" : ISODate("2014-08-11T00:00:00Z"), "grade" : "A", "score" : 11 } } , {restaurant_id: 1, name: 1, grades : 1, _id: 0 }).pretty()
db.restaurantData.find({  "grades.1" : { "date" : ISODate("2014-08-11T00:00:00Z"), "grade" : "A", "score" : 9 } } , {restaurant_id: 1, name: 1, grades : 1, _id: 0 }).pretty()
db.restaurantData.find({"address.coord.1" : { $gt: 42, $lte: 52}}, {"restaurant_id": 1, name: 1, "address.street": 1, "address.coord": 1, _id: 0}).pretty()
db.restaurantData.find().sort( {"name": 1} ).pretty()
db.restaurantData.find().sort( {"name": -1} ).pretty()
db.restaurantData.find().sort( {"cuisine": 1, "borough": -1} ).pretty()
db.restaurantData.find({ $or: [{ "address.street":  null }, {"address.street" : {"$exists" : true, "$eq" : ""}} ]}).pretty()
db.restaurantData.find( { "address.coord": { $type: "double" } } ).pretty()
db.restaurantData.find( { "grades.score": { $mod: [ 7, 0 ] } }, {"name" : 1, "grades" : 1} ).pretty()
db.restaurantData.find({ name : { $regex: /mon/ } }, {"name": 1, "borough" : 1, "coord": 1, "cuisine": 1}).pretty()
db.restaurantData.find({ name : { $regex: /^Mad/  } }, {"name": 1, "borough" : 1, "coord": 1, "cuisine": 1}).pretty()
